image: alpine:latest

stages:
  - build
  - test

Build:
  stage: build
  variables:
    KUBE_NAMESPACE: dev
    host: dev
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    name: $CI_ENVIRONMENT_SLUG
  environment:
    name: crawler
    url: http://crawler.tfm.zone
  # only:
  #   refs:
  #     - master
    # kubernetes: active
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
    - apk add glibc-2.23-r3.apk
    - rm glibc-2.23-r3.apk
    - curl https://get.helm.sh/helm-v2.16.0-rc.2-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version
    - helm init --client-only
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
  script:
    - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
    - echo $KUBE_NAMESPACE
    - track="${1-stable}"
    - name="$CI_ENVIRONMENT_SLUG"
    - echo $name
    - helm dep update crawler/main
    - cd crawler/main
    - helm upgrade --install --wait --namespace="$KUBE_NAMESPACE" --version="$CI_PIPELINE_ID-$CI_JOB_ID" $name .

test:
  stage: test
  script:
    - exit 0
  only:
    - triggers
    - branches